--------------------------------------- COMMANDS ---------------------------------------

herramientas de redes => net-tools
  - instalar en Debian => apt-get install net-tools

cambiar el idioma del teclado => loadkeys idioma

mostrar información de los ficheros => df

cambiar de directorio => cd directorio
  - último directorio trabajado => cd -

obtener el tipo de archivo => file archivo|directorio

ver un archivo con un pager => less archivo

tipos de comandos =>
  - executable program => son todos los programas que se encuentran en /usr/bin, que han sido escritos en un lenguaje de scripting
  - shell builtins => comandos creados por el shell (comandos básicos)
  - shell functions => comandos creados por personalización
  - alias => comandos que nos permite llamar de diferente manera uno o varios comandos

utilizar expansions =>
  - pathname expansion, mostrar los archivos de la carpeta actual con wildcards => echo wildcard
  - tilde expansion, acceder al home del usuario => ~nombre_usuario # el nombre es opcional, únicamente si se quiere acceder a otro usuario (conocida como ruta relative-to-home)
  - arithmetic expansion => echo $((operacion))
  - brace expansion, iterador del contenido => echo text_{1,2,...} # text_1 text_2
    - también se pueden usar rangos => echo text_{1..maximo} o echo text_{A..Z}
  - parameter expansion, para mostrar los valores de las variables de entorno => echo ${variable:desde:hasta} # desde y hasta son opcionales, son para obtener una subparte del valor
  - command sustitution, para utilizar un comando dentro de otro => comando $(comando | comando | ...)
  - double quotes => nos permite escribir nombres de archivos con espacios, quita los saltos de línea en el output, para escapar de los expansions se puede usar \
  - single quotes => nos permite escapar de los expansions

indicar que el programa espere (en segundos) => sleep cantidad

command line editing, bash usa GNU Readline =>
  - movimientos del cursor =>
    - al inicio de la línea => CTRL + a
    - al final de la línea => CTRL + e
    - un caracter a la derecha => CTRL + f
    - un caracter a la izquierda => CTRL + b

mostrar el historial de la línea de comandos => history
  - indicar que línea del historial usar =>  history !numero_linea
  - moverse entre historial de comandos =>
    - comando previo => CTRL + p
    - comando posterior => CTRL + n
    - primer comando => ALT + <
    - último comando => ALT + >
    - buscar en el historial => CTRL + r

instalación de software =>
  - deb =>
    - realizar consultas al caché de apt => apt-cache
    - buscar un paquete para obtener su información => apt-cache|apt search paquete
    - instalar un paquete => apt-get|apt install paquete
    - desinstalar un paquete => apt-get|apt remove paquete
    - remover un paquete con sus archivos de configuración => apt-get|apt purge paquete
  - rpm =>
    - buscar un paquete para obtener su información => yum|dnf search paquete
    - instalar un paquete => yum|dnf install paquete
    - desinstalar un paquete => yum|dnf remove paquete

----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----

// esto es en etc
rc: no es tipicamente usando en distribuciones Linux, pero es usado en BSD (derivado de Linux)
rc.local: es usado para habilitar la ejecución de comandos adicionales al iniciarse sin tener que agregar symlinks (indica un acceso a un directorio)
rc.sysinit: es especifico de Red Hat y se ejecuta como uno de los primeros scripts, a diferencia de rc.local que se ejecuta más tarde

vmlinux: archivo ejecutable enlazado estáticamente y que contiene el núcleo Linux

nautilus => abrir directorio en el gui

buscar palabras en un archivo => grep busqueda nombre_archivo
  - grep -i => para eliminar el case-sensitive
  - grep -n => para indicar la línea de donde se encontró
  - grep -c => para mostrar la cantidad de lineas que contienen la palabra parecida
  - grep -v => para mostrar todas las líneas que no tienen esta palabra

// BASH SCRIPTING

comentar múltiples lineas => : ' lineas '

case statement =>
  case $variable in
    "VALUE" )
      lineas de código ;;

crear un rango => {inicial..final..incremento}

crear for condition => for in {rango} ó for (( como un for normal ))

args=("$@") =>  es una forma de pedir cuantos argumentos sean necesarios

case string =>
  - ${variable^} => capitalize
  - ${variable^^} => upcase

realizar operaciones => expr operacion

verificar si existe el directorio => -d "$direct_name"

verificar si existe el archivo => -f "$file_name"

crear un menú seleccionable => select variable in VALUE VALUE VALUE ..
                               do
                                 comandos
                               done
para leer cada cierto tiempo => read -t cantidad

comprobar que el tiempo de espera ha terminado => $? = 0

para debuguear => bash -x archivo_ejecutable

CENTOS

para poder ver el DNS => /etc/resolv.conf

configurar la IP a estática => dentro del archivo de ip /etc/sysconfig/network-scripts/nombre-archivo
  - cambiando el tipo => BOOTPROTO=static
  - IPADDR=ip => cambiar el IP
  - NETMAKS=255.255.255.0 => cambiar la máscara de red
  - GATEWAY=punto-salida => cambiar el punto de salida de la ip
  - DNS1=valor => cambiar el valor de la DNS con el valor de /etc/resolv.conf

modificar DNS => /etc/named.conf

configurar bind => /usr/share/doc/bind-9.9.4/sample/etc/named.rfc1912.zones
  - cuando se modifica también se deben crear los archivos correspondientes los cuales contendrán los registros de recursos (entradas para resolver los nombres)
    estos archivos son directos e indirectos:
      - /usr/share/doc/bind-9.9.4/sample/etc/named.localhost hacia => /var/named/upao.directa
      - /usr/share/doc/bind-9.9.4/sample/etc/named.loopback hacia => /var/named/upao.indirecta
  - comprobar que el named ha sido cambiado => named-checkzone name_dns /var/named/upao.directa
  - verificar si la sintaxis esta bien => named-checkconf /etc/named.conf
  - verificar si esta funcionando la conexion DNS => dig name_dns DNS






//
manejar las particiones => fdisk /dev/sda

ver la formación de las particiones => lsblk

formatear particiones =>
  - a ext4 => mkfs.ext4 /dev/particion
  - para swap =>
    - configurar para swap = mkswap /dev/particion
    - habilitar archivos para pagination y swapping => swapon /dev/particion

montar una particion => mount /dev/particion /mnt/directorio

instalar el paquete base (contiene los paquetes necesario para usar el sistema, librerías C, Bash Shell, etc.) para arch linux => pacstrap /mnt base base-devel

generar un fstab file para definir como las particiones, block devices o archivos remotos del sistema son montados dentro del filesystem => genfstab -U /mnt >> /mnt/etc/fstab

cambiar el root dentro del nuevo sistema para el proceso actual ejecutandose y el proceso hijo => arch-chroot /mnt

configurar la zona horaria:
  - crear un symbolic link que se usará al iniciar el sistema => ln -sf /usr/share/<zoneinfo>/<Region>/<City> /etc/localtime
  - configurar el hardware clock => hwclock --systohc --utc

configurar el idioma:
  - descomentar el idioma que se usará en /etc/locale.gen => vi /etc/locale.gen
  - setear el locale =>
    locale-gen
    echo LANG=es_PE.UTF-8 > /etc/locale.conf
    export LANG=es_PE.UTF-8
say => convertir texto en audio usando GNUstep speech engine

festival => convertir texto en audio
  con este paquete viene instalado text2wave => convertidor de texto a .wav files
    - guardar como .wav file => text2wave -o archivo.wav

ventajas de lanzar un programa gráfico desde la consola =>
  - el programa no está listada como opciones en el menú
  - podemos ver los errores que lanza el programa en la consola

tmux => es un mutiplexor de terminal que permite dividir la consola
  - instalar => sudo apt-get install tmux
  - crear una nueva session con su nombre => tmux new -s nombre_consola
  - hacer un split vertical => CTRL + B %
  - hacer un split horizontal => CTRL + B "
  - eliminar panel actual => CTRL + B X

solucionar error input/output usb =>
  - instalar librería => sudo apt-get install dosfstools
  - desmontar el usb => sudo umount /dev/sdb1
  - reparar usb => sudo dosfsck -t -a -w /dev/sdb1

diferencias entre apt & apt-get =>
  apt-get =>
    - solamente actualiza los repositorios no da mayor información
  apt =>
    - da información adicional cuando se realizan actualizaciones
    - mejores opciones para el manejo de repositorios
  - recomendación => usar apt en lugar de apt-get

==================================================================================================================================================================
ENVIRONMENT

environment variables => son todas las variables que no son creadas por el bash
  - DISPLAY => el nombre de la pantalla si se está ejecutando una interfaz gráfica
  - EDITOR => nombre del programa que se usará como editor de texto
  - SHELL => el nombre del shell program
  - HOME => el pathname del directorio home
  - LANG => define el conjunto de caracteres y orden de colación del lenguaje
  - OLD_PWD => el directorio de trabajo previo
    - en Zorin OS => OLDPWD
  - PAGER => nombre del programa usado para paginar los output
  - PATH => la lista de directorios en los que se busca cuando pones el nombre de un programa ejecutable, separados por :
    - se indica en los diferentes startup files
  - PS1 => define el contenido del shell prompt
  - PWD => directorio actual de trabajo
  - TERM => el nombre del tipo de terminal
  - TZ => especifíca el time zone
  - USER => nombre del usuario actual
  - HISTCONTROL => controlar el comando history
    - ignoredups => indica que se ignorarán los comandos que ya han sido grabados
  - HISTSIZE => controlar el tamaño de lineas que recuerda el comando history, se le puede cambiar el número que por default son 500

shell variables => son bits de datos colocados por bash, también guarda aliases y shell functions

mostrar los environment variables => printenv, también se puede mostrar el valor directamente de una variable printenv VARIABLE

mostrar todas las variables => set

alias => es un comando que podemos definir nosotros mismos
  - crear un alias => alias nombre_alias='comandos'
  - eliminar alias => unalias nombre_alias

ver todos los alias creados => alias

startup files =>
  - login shell session => es el prompt solicita nuestro usuario y contraseña
    - script de configuración que aplica a todos los usuarios => /etc/profile
  - los non-login startup files heredan el environment de los login shell startup files

extensiones comunes para backups => .bak, .sav, .old, .orig

hacer que un startup file lea sus cambios sin necesidad de reiniciar el shell => source .nombre_startup_file

--------------------------------------- BASH ---------------------------------------

comentarios => #
if compound command =>
  if [ condicion ]; then
    funcionalidad
  fi

comprobar si existe archivo => -f nombre_archivo

leer archivo => . nombre_archivo

--------------------------------------- VIM ---------------------------------------

entrar en insert mode => i
salir del archivo => :q
guardar el archivo => :w
  - guardar en un archivo aparte => :w nombre_archivo
ir al inicio del archivo => gg
ir al final del archivo => G
ir al inicio o fin de un bloque => { }
se puede indicar la cantidad que se realizará el comando => numero (comando)
cortar una linea entera => dd
  - se pueden indicar más maneras de cuantas líneas se cortaran => d(comando)
deshacer los cambios => u
retrocer cuando se deshace el cambio => CTRL + R
copiar una linea => yy
pegar => p
  - pegar detrás de la línea del cursor => SHIFT + P
entrar en insert mode agregando una nueva línea => o
entrar en visual mode => v
inicio de siguiente palabra => w
  - moverse al inicio de siguiente palabra después del próximo espacio en blanco => W
fin de siguiente palabra => e
  - moverse al fin de siguiente palabra después del próximo espacio en blanco => E
inicio de anterior palabra => b
  - moverse a la anterior palabra después del anterior espacio en blanco, ignorando signos de puntuación => B
moverse al inicio de la línea => 0
moverse al final de la línea => $
ir exactamente a la letra que se busca => f (letra)
ir un espacio anterior a la letra que se busca => t (letra)
  - ir a la siguiente coincidencia de la línea => ;
mover al inicio o fin de () [] {} => %
cambiar una cantidad => c (comando)
buscar la siguiente palabra igual => *
entrar en insert mode al final de la linea => A
eliminar la letra de la derecha => x
  - se puede indicar otro comando para indicar el límite de eliminación => x (comando)
cambiar el case de la letra => ~
  - indicar la cantidad letras que cambiará el case => (numero) ~
ejecutar el mismo comando anterior (period) => .
reemplazar la letra actual => r
  - indicar cuantas letras se cambiaran => (numero) r
cambiar toda la línea => R
entrar en modo modo visual seleccionando una línea => CTRL + V
entrar en modo modo visual seleccionando un bloque => SHIFT + V
identar para la derecha => >
indentar para la izquierda => <
crear macros para agrupar comandos => q (letra), llamar macro @(letra)
realizar un cambio a múltiples líneas => después de CTRL + V usar SHIFT + I y podremos agregar múltiples texto en todo el bloque seleccionado
descender una página => SHIFT + F
ascender una página => SHIFT + B
unir dos líneas => :j
busqueda global y reemplazamiento => rangooperacion/texto/texto/gc
  - rango =>
    - todo el archivo => %
    - desde una línea hasta el final del archivo => numero_linea,$
  - operacion =>
    - indicar sustitución => s
  - /texto/texto/ => el primero es texto que se reemplazará y el segundo es el texto con el que se reemplazará
  - g => indica que se hará el cambio de manera global, si se omite solamente se hará al primero que encuentre
  - c => es opcional, indica la confirmación del usuario antes de cada sustitución
    - aceptar el cambio en la instancia => y
    - saltear el cambio en la instancia => n
    - realizar el cambio a partir de la instancia actual para las siguientes => a
    - salir de sustitución manteniendo los cambios anteriores => q
    - realizar la sustitución de la instancia actual y salir => l
    - moverse entre las instancias => arriba CTRL + E, abajo CTRL + Y
se pueden abrir múltiples archivos => vi archivo archivo archivo
  - pasar al siguiente archivo => :n
  - pasar al archivo anterior => :N
  - ver la lista de archivos que fueron editados => :buffers
  - cambiar exactamente a un archivo => :buffer numero_archivo
indicar el archivo que se editará => :e nombre_archivo
insertar todo el contenido de otro archivo en el archivo actual, lo insertará arribar del cursor => :r nombre_archivo
guardar y salir del archivo actual => ZZ
autocompletar la palabra => en insert mode, CTRL + n
mostrar los números de línea => :set number
  - indicar de manera relativa => :set number relativenumber
ocultar los número de línea => :set nonumber
NERDTree => plugin para poder utilizar un menú de todos los archivos
  - split de manera horizontal => i
  - split de manera vertical => s
  - refrescar los archivos =>
    - solamente el directorio actual => r
    - desde el root => R
  - cambiar el ancho del split => ctrl + w + cantidad + >|<
    - indicando la cantidad para ver cuanto espacio mover
  - abrir en un nuevo tab => T
    - moverse al siguiente tab => gt
    - retroceder de tab => gT
  - mostrar archivos ocultos => shift + i
buscar una palabra => /palabra
  - buscar una palabra sin case sensitive => /palabra\c
ejecutar comandos => :! comando
manejar líneas de código =>
  - ocultar lo seleccionado => zf
  - mostrar lo seleccionado => zD

--------------------------------------- PACKAGES ---------------------------------------

figlet => mostrar caracteres de manera larga en la terminal
  - fliget texto
